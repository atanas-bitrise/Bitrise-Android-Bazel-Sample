---
format_version: '11'
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
project_type: other
trigger_map:
- push_branch: "*"
  workflow: primary
- pull_request_source_branch: "*"
  workflow: primary
workflows:
  deploy:
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@6: {}
    - script@1:
        title: Install Bazel
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x

            sudo apt install apt-transport-https curl gnupg
            curl -fsSL https://bazel.build/bazel-release.pub.gpg | gpg --dearmor > bazel.gpg
            sudo mv bazel.gpg /etc/apt/trusted.gpg.d/
            echo "deb [arch=amd64] https://storage.googleapis.com/bazel-apt stable jdk1.8" | sudo tee /etc/apt/sources.list.d/bazel.list

            sudo apt update && sudo apt install bazel
            bazel --version
            sudo apt update && echo Y | sudo apt full-upgrade
    - script@1:
        title: Bazel Build
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x

            bazel build //app:app --incompatible_java_common_parameters=false
    - script@1:
        title: Copy Artifacts
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x

            cp bazel-bin/app/src/main/bitrise_demo.apk $BITRISE_DEPLOY_DIR/
    - deploy-to-bitrise-io@2: {}
  primary:
    steps:
    - activate-ssh-key@4:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone@6: {}
    - script@1:
        title: Install Bazel
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x

            sudo apt install apt-transport-https curl gnupg
            curl -fsSL https://bazel.build/bazel-release.pub.gpg | gpg --dearmor > bazel.gpg
            sudo mv bazel.gpg /etc/apt/trusted.gpg.d/
            echo "deb [arch=amd64] https://storage.googleapis.com/bazel-apt stable jdk1.8" | sudo tee /etc/apt/sources.list.d/bazel.list

            sudo apt update && sudo apt install bazel
            bazel --version
            sudo apt update && echo Y | sudo apt full-upgrade
    - cache-pull@2: {}
    - script@1:
        title: Bazel Test
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x

            bazel test //app:tests --incompatible_java_common_parameters=false --disk_cache=$BITRISE_SOURCE_DIR/Cache
    - script@1:
        title: Copy Artifacts
        inputs:
        - content: |-
            #!/usr/bin/env bash
            # fail if any commands fails
            set -e
            # debug log
            set -x

            cp bazel-out/k8-fastbuild/testlogs/app/src/test/bitrise_test/test.log $BITRISE_DEPLOY_DIR/

            # or run a script from your repository, like:
            # bash ./path/to/script.sh
            # not just bash, e.g.:
            # ruby ./path/to/script.rb
    - deploy-to-bitrise-io@2: {}
    - cache-push@2:
        inputs:
        - cache_paths: "$BITRISE_SOURCE_DIR/Cache"
meta:
  bitrise.io:
    stack: linux-docker-android-20.04
    machine_type_id: elite
